<?php
// app\livewire\forms\FormularioPrueba.php
namespace App\Livewire\Forms;

use Livewire\Component;
use App\Models\post\Post;

class FormularioPrueba extends Component
{
    public $search = '';
    public $filas;

    protected $listeners = ['searchUpdated' => 'filter'];

    public function mount()
    {
        $this->filter();
    }

    public function render()
    {
        return view('livewire.forms.formulario-prueba', [
            'fields' => $this->filas,
        ]);
    }

    public function updatedSearch()
    {
        $this->filter();
    }

    public function filter()
    {
        $this->filas = Post::query()
            ->when($this->search, function ($query) {
                $filter = '%' . $this->search . '%';
                $query->where('id', 'like', $filter)->orWhere('title', 'like', $filter)->orWhere('content', 'like', $filter)->orWhere('created_at', 'like', $filter);
            })
            ->get();
    }
}
----
<div>
{{-- resources\views\livewire\forms\formulario-prueba.blade.php --}}
    <div>
    <input class="my-5"
           wire:model.live="search">
    componente Padre: {{ $search }}
    <hr>
    <div class="flex items-center space-x-4">
      <livewire:forms.search-prueba wire:model="search" />
    </div>
  </div>
  <table class="min-w-full divide-y divide-gray-200">
    <thead>
      <tr>
        <th class="px-4 py-2 text-center text-gray-900 dark:text-white">ID</th>
        <th class="px-4 py-2 text-center text-gray-900 dark:text-white">Title</th>
        <th class="px-4 py-2 text-center text-gray-900 dark:text-white">Content</th>
        <th class="px-4 py-2 text-center text-gray-900 dark:text-white">Created At</th>
      </tr>
    </thead>
    <tbody>
      @foreach ($fields as $field)
        <tr>
          <td class="px-4 py-2">{{ $field->id }}</td>
          <td class="px-4 py-2">{{ $field->title }}</td>
          <td class="px-4 py-2">{{ $field->content }}</td>
          <td class="px-4 py-2">{{ $field->created_at }}</td>
        </tr>
      @endforeach
    </tbody>
  </table>
</div>
----
<?php
// app\livewire\forms\SearchPrueba.php
namespace App\Livewire\Forms;

use Livewire\Component;

class SearchPrueba extends Component
{
    #[Modelable]
    public $search;

    public function mount($search)
    {
        $this->search = $search;
    }

    public function updatedSearch()
    {
        // Aquí puedes agregar cualquier lógica adicional cuando la propiedad `search` se actualice.
        $this->emitUp('searchUpdated', $this->search);
    }

    public function render()
    {
        return view('livewire.forms.search-prueba');
    }
}
----
<div>
  {{-- resources\views\livewire\forms\search-prueba.blade.php --}}
  <input class="input-search"
         type="search"
         wire:model.live="search"
         placeholder="Buscar...">
  <br>componente Hijo: {{ $search }}
</div>

